# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: QR-Scanner - Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
      
  job1:
    name: Compiles and Runs the Java Spark REST Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Install Google Chrome
        run: |
              chmod +x ./scripts/InstallChrome.sh
                       ./scripts/InstallChrome.sh

      - name: Build with Maven
        run: mvn -B package -Dmaven.test.skip --file pom.xml

      #- name: List current Directory
      #  run: ls -a
      
      #- name: List target folder
      #  run: |
      #     cd target
      #     ls -a

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        
      - name: Start REST Server
        run: |
          java -jar /home/runner/work/qr-scanner-server/qr-scanner-server/target/qrscanner-1.0-SNAPSHOT-jar-with-dependencies.jar --test=true &
          ls -a
      
      # CLIENT
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
          cache-dependency-path: './client/package-lock.json'
      - name: Starte Node.js Client
        run: |
          cd /home/runner/work/qr-scanner-server/qr-scanner-server/client
          npm install
          npm run dev &

  job3:
    name: Tests the Spark-REST-Server with UnitTests and the Client with Java-Selenium
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run: mvn clean test && mvn -B test --file pom.xml
        #env:
          # CLIENT-URL - Selenium-Test has to navigate to this URL
          # disabled bis klar ist, welche url der Client hat: 
          # CLIENT_URL: http://localhost:1234
        
      - name: Test Reporter
        uses: dorny/test-reporter@v1.4.3
        with:
          name: Test Resultate
          path: "**/surefire-reports/TEST-*.xml"
          reporter: java-junit
  
  job4:
    if: ${{ false }} # disable for now
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=heusser4git_qr-scanner-server

